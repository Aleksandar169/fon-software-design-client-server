/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import controller.CustomerController;
import controller.PhoneController;
import controller.ReceiptController;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Customer;
import model.Odo;
import model.Phone;
import model.Receipt;
import model.ReceiptItem;
import model.Worker;
import tablemodel.TableModel;

/**
 *
 * @author Lenovo
 */
public class ReceiptAdd extends javax.swing.JFrame {

    Worker worker;
    int quantity;
    List<ReceiptItem> items = new ArrayList<>();
    List<Odo> phones = new ArrayList<>();
    int id;
    Receipt r;
    ReceiptForm rform;

    /**
     * Creates new form MainForm
     */
    public ReceiptAdd() {
        initComponents();
    }

    public ReceiptAdd(Worker w) {
        initComponents();
        //jPanel1.setVisible(false);
        this.worker = w;
        fillForm();
    }

    public ReceiptAdd(ReceiptForm aThis, Receipt r, Worker w) {
        initComponents();
        this.r = r;
        rform = aThis;
        worker = w;
        btnAdd.setVisible(false);
        btnDone.setVisible(false);

        fillUpdateForm();
        // fillForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable();
        btnDone = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblReceipt = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        lblPrice = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnUpdateAdd = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lblWorkerFromReceipt = new javax.swing.JLabel();
        lblDatefromReceipt = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblWorker = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblItems);

        btnDone.setBackground(new java.awt.Color(153, 255, 153));
        btnDone.setForeground(new java.awt.Color(255, 255, 255));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        jLabel2.setText("Customer:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton3.setText("AddCustomer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Items:");

        jLabel4.setText("Receipt");

        tblReceipt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblReceipt);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblPrice.setText("0");

        jLabel6.setText("TotalAmount:");

        txtQuantity.setText("1");
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnUpdateAdd.setText("Add");
        btnUpdateAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAddActionPerformed(evt);
            }
        });

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblWorkerFromReceipt.setText("g");

        lblDatefromReceipt.setText("jLabel5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateAdd)
                            .addComponent(jButton1)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(lblWorkerFromReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(lblDatefromReceipt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(536, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(lblWorkerFromReceipt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lblDatefromReceipt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPrice)
                            .addComponent(jLabel6))))
                .addGap(18, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jLabel1.setText("Worker:");

        lblWorker.setText("jLabel2");

        lblDate.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblWorker, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(361, 361, 361)
                        .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblWorker)
                    .addComponent(lblDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if (tblReceipt.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "You must select item!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        quantity = Integer.parseInt(txtQuantity.getText());

        //        if (txtQuantity.getText().equals("") || quantity<=0) {
        //            JOptionPane.showMessageDialog(this, "Quantity must be more then 0!", "Error", JOptionPane.ERROR_MESSAGE);
        //            return;
        //        }
        TableModel tm = (TableModel) tblReceipt.getModel();
        int i = tblReceipt.getSelectedRow();
        ReceiptItem r2 = (ReceiptItem) tm.getSelectedItem(i);
        if (quantity > r2.getQuantity()) {
            JOptionPane.showMessageDialog(this, "You set more quantity then you have on receipt!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (quantity == r2.getQuantity()) {
            if (items != null && items.size() > 0) {
                items.remove(r2);
                r2.calculate();
                update();
                updateTable();
                return;
            }
        }

        r2.setQuantity(r2.getQuantity() - quantity);
        r2.calculate();

        // updateRemove();
        //update();
        updateTable();
        txtQuantity.setText("1");
        quantity = 1;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnUpdateAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAddActionPerformed
        // TODO add your handling code here:
        if (tblItems.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "You must select item!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        List<ReceiptItem> l = new ArrayList<>();
        items = r.getItems();
        Phone phone = (Phone) ((TableModel) (tblItems.getModel())).getSelectedItem(tblItems.getSelectedRow());
        ReceiptItem item = containPhone(phone);
        quantity = Integer.parseInt(txtQuantity.getText());

        if (item != null) {
            item.setQuantity(item.getQuantity() + quantity);
            item.calculate();
            update();
            updateTable();
            txtQuantity.setText("1");
            quantity = 1;
            return;
        }
        ReceiptItem r1 = new ReceiptItem(r, quantity, phone.getPrice(), phone);
        items.add(r1);
        //update();
        updateTable();
        txtQuantity.setText("1");
        quantity = 1;
    }//GEN-LAST:event_btnUpdateAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        r.setCustomer((Customer) jComboBox1.getSelectedItem());
        r.setDate(LocalDate.now());
        r.setTotalAmount(Double.parseDouble(lblPrice.getText()));
        r.setWorker(worker);
        TableModel tm = (TableModel) tblReceipt.getModel();
        List<ReceiptItem> l = tm.getList();
        r.setItems(l);
        //System.out.println(r.getItems());
        if (l == null || l.isEmpty() || jComboBox1.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "System can not update receipt, check input data", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            ReceiptController.getInstance().updateReceipt(r);
           JOptionPane.showMessageDialog(this, "System saved receipt", "Info", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ReceiptAdd.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (tblItems.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "You must select item!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Phone phone = (Phone) ((TableModel) (tblItems.getModel())).getSelectedItem(tblItems.getSelectedRow());
        ReceiptItem item = containPhone(phone);
        quantity = Integer.parseInt(txtQuantity.getText());

        if (item != null) {
            item.setQuantity(item.getQuantity() + quantity);
            item.calculate();
            update();
            updateTable();
            txtQuantity.setText("1");
            quantity = 1;
            return;
        }
        ReceiptItem r1 = new ReceiptItem(null, quantity, phone.getPrice(), phone);
        items.add(r1);
        //update();
        updateTable();
        txtQuantity.setText("1");
        quantity = 1;
    }//GEN-LAST:event_btnAddActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        CustomerAUForm c = new CustomerAUForm();
        c.setVisible(true);
        c.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        // TODO add your handling code here:
        LocalDate date = LocalDate.now();
        Customer c = (Customer) jComboBox1.getSelectedItem();
        Double price = Double.parseDouble(lblPrice.getText());
        List<ReceiptItem> list = new ArrayList<>();
        for (Odo item : items) {
            list.add((ReceiptItem) item);

        }
        Receipt receipt = new Receipt(date, price, worker, c, list);
        if (list == null || list.isEmpty() || jComboBox1.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "System can not save receipt", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            JOptionPane.showMessageDialog(this, "System saved receipt!", "Info", JOptionPane.INFORMATION_MESSAGE);

        }

        try {
            id = ReceiptController.getInstance().addReceipt(receipt);
            JOptionPane.showMessageDialog(this, "System saved receipt!", "Info", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Info", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ReceiptAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDoneActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateAdd;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDatefromReceipt;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblWorker;
    private javax.swing.JLabel lblWorkerFromReceipt;
    private javax.swing.JTable tblItems;
    private javax.swing.JTable tblReceipt;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    public void fillForm() {
        btnUpdateAdd.setVisible(false);
        btnUpdate.setVisible(false);
        lblDatefromReceipt.setVisible(false);
        lblWorkerFromReceipt.setVisible(false);

        String wor = worker.getName() + " " + worker.getLastname();
        lblWorker.setText(wor);
        lblDate.setText(LocalDate.now().toString());

        List<Odo> c = new ArrayList<>();
        try {
            c = CustomerController.getInstance().getCustomers();
            jComboBox1.setModel(new DefaultComboBoxModel(c.toArray()));
        } catch (Exception ex) {
            Logger.getLogger(ReceiptAdd.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            phones = PhoneController.getInstance().getPhones();
        } catch (Exception ex) {
            Logger.getLogger(ReceiptAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
        tblItems.setModel(new TableModel(phones));

        tblReceipt.setModel(new TableModel(items));

    }

    private ReceiptItem containPhone(Phone phone) {
        for (Odo item : items) {
            if (((ReceiptItem) item).getPhone().getIdPhone() == phone.getIdPhone()) {
                return (ReceiptItem) item;
            }

        }
        return null;
    }

    private void update() {
        double price = 0;
        for (Odo item : items) {
            price += ((ReceiptItem) item).getPhonePrice() * ((ReceiptItem) item).getQuantity();

        }
        lblPrice.setText(price + "");
    }

    private void updateTable() {
        tblReceipt.setModel(new TableModel(items));
        update();
    }

    private void fillUpdateForm() {
        String wor = r.getWorker().getName() + " " + r.getWorker().getLastname();
        lblWorker.setText(wor);
        lblDate.setText(LocalDate.now().toString());
        lblPrice.setText(r.getTotalAmount() + "");
        lblWorkerFromReceipt.setText("First worker: " + r.getWorker().getName() + " " + r.getWorker().getLastname());
        lblDatefromReceipt.setText(r.getDate().toString());

        List<Odo> c = new ArrayList<>();
        try {
            c = CustomerController.getInstance().getCustomers();
            jComboBox1.setModel(new DefaultComboBoxModel(c.toArray()));
        } catch (Exception ex) {
            Logger.getLogger(ReceiptAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
        jComboBox1.setSelectedItem(r.getCustomer());
        try {
            phones = PhoneController.getInstance().getPhones();
        } catch (Exception ex) {
            Logger.getLogger(ReceiptAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
        tblItems.setModel(new TableModel(phones));
        System.out.println(r.getItems());
        items.addAll(r.getItems());
        tblReceipt.setModel(new TableModel(r.getItems()));

    }

}
